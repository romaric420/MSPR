{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROMARIC\\\\Desktop\\\\MSPR\\\\ess\\\\src\\\\pages\\\\Inscription.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../styles/Inscription.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inscription() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    nom: '',\n    prenom: '',\n    email: '',\n    telephone: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    setErrors({\n      ...errors,\n      [name]: ''\n    });\n    setSuccessMessage('');\n  };\n  const validate = () => {\n    const newErrors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const phoneRegex = /^[0-9]{8,15}$/;\n    if (!formData.nom.trim()) newErrors.nom = 'Le nom est requis.';\n    if (!formData.prenom.trim()) newErrors.prenom = 'Le prénom est requis.';\n    if (!formData.email.trim()) newErrors.email = 'L\\'email est requis.';else if (!emailRegex.test(formData.email)) newErrors.email = 'Email invalide.';\n    if (!formData.telephone.trim()) newErrors.telephone = 'Le numéro est requis.';else if (!phoneRegex.test(formData.telephone)) newErrors.telephone = 'Numéro invalide (8 à 15 chiffres).';\n    if (!formData.password) newErrors.password = 'Mot de passe requis.';else if (formData.password.length < 6) newErrors.password = 'Minimum 6 caractères.';\n    if (!formData.confirmPassword) newErrors.confirmPassword = 'Confirmation requise.';else if (formData.password !== formData.confirmPassword) newErrors.confirmPassword = 'Les mots de passe ne correspondent pas.';\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate()) {\n      console.log('Formulaire validé ✔️', formData);\n      setSuccessMessage('Inscription réussie !');\n      setFormData({\n        nom: '',\n        prenom: '',\n        email: '',\n        telephone: '',\n        password: '',\n        confirmPassword: ''\n      });\n      setErrors({});\n    }\n  };\n  const fields = [{\n    label: 'Nom',\n    name: 'nom',\n    type: 'text'\n  }, {\n    label: 'Prénom',\n    name: 'prenom',\n    type: 'text'\n  }, {\n    label: 'Email',\n    name: 'email',\n    type: 'text'\n  },\n  // ← ⚠️ type text pour garder comportement identique\n  {\n    label: 'Téléphone',\n    name: 'telephone',\n    type: 'tel'\n  }, {\n    label: 'Mot de passe',\n    name: 'password',\n    type: 'password'\n  }, {\n    label: 'Confirmer le mot de passe',\n    name: 'confirmPassword',\n    type: 'password'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-retour\",\n        onClick: () => navigate('/acceuil'),\n        children: \"\\u2190 Accueil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Inscription Wildlens \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [fields.map(_ref => {\n            let {\n              label,\n              name,\n              type\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: type,\n                name: name,\n                value: formData[name],\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"underline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), errors[name] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors[name]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 50\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"S'inscrire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"success\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Inscription, \"maUAxOucGPKXQ9HXLX16ETe+gZE=\", false, function () {\n  return [useNavigate];\n});\n_c = Inscription;\nexport default Inscription;\nvar _c;\n$RefreshReg$(_c, \"Inscription\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Inscription","_s","navigate","formData","setFormData","nom","prenom","email","telephone","password","confirmPassword","errors","setErrors","successMessage","setSuccessMessage","handleChange","e","name","value","target","validate","newErrors","emailRegex","phoneRegex","trim","test","length","Object","keys","handleSubmit","preventDefault","console","log","fields","label","type","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","_ref","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/ROMARIC/Desktop/MSPR/ess/src/pages/Inscription.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../styles/Inscription.css';\r\n\r\nfunction Inscription() {\r\n    const navigate = useNavigate();\r\n\r\n    const [formData, setFormData] = useState({\r\n        nom: '',\r\n        prenom: '',\r\n        email: '',\r\n        telephone: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n        setErrors({ ...errors, [name]: '' });\r\n        setSuccessMessage('');\r\n    };\r\n\r\n    const validate = () => {\r\n        const newErrors = {};\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        const phoneRegex = /^[0-9]{8,15}$/;\r\n\r\n        if (!formData.nom.trim()) newErrors.nom = 'Le nom est requis.';\r\n        if (!formData.prenom.trim()) newErrors.prenom = 'Le prénom est requis.';\r\n        if (!formData.email.trim()) newErrors.email = 'L\\'email est requis.';\r\n        else if (!emailRegex.test(formData.email)) newErrors.email = 'Email invalide.';\r\n        if (!formData.telephone.trim()) newErrors.telephone = 'Le numéro est requis.';\r\n        else if (!phoneRegex.test(formData.telephone)) newErrors.telephone = 'Numéro invalide (8 à 15 chiffres).';\r\n        if (!formData.password) newErrors.password = 'Mot de passe requis.';\r\n        else if (formData.password.length < 6) newErrors.password = 'Minimum 6 caractères.';\r\n        if (!formData.confirmPassword) newErrors.confirmPassword = 'Confirmation requise.';\r\n        else if (formData.password !== formData.confirmPassword)\r\n            newErrors.confirmPassword = 'Les mots de passe ne correspondent pas.';\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            console.log('Formulaire validé ✔️', formData);\r\n            setSuccessMessage('Inscription réussie !');\r\n            setFormData({\r\n                nom: '',\r\n                prenom: '',\r\n                email: '',\r\n                telephone: '',\r\n                password: '',\r\n                confirmPassword: '',\r\n            });\r\n            setErrors({});\r\n        }\r\n    };\r\n\r\n    const fields = [\r\n        { label: 'Nom', name: 'nom', type: 'text' },\r\n        { label: 'Prénom', name: 'prenom', type: 'text' },\r\n        { label: 'Email', name: 'email', type: 'text' }, // ← ⚠️ type text pour garder comportement identique\r\n        { label: 'Téléphone', name: 'telephone', type: 'tel' },\r\n        { label: 'Mot de passe', name: 'password', type: 'password' },\r\n        { label: 'Confirmer le mot de passe', name: 'confirmPassword', type: 'password' },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"overlay\">\r\n\r\n                {/* BOUTON ACCUEIL */}\r\n                <button className=\"btn-retour\" onClick={() => navigate('/acceuil')}>\r\n                    ← Accueil\r\n                </button>\r\n\r\n                <div className=\"login-form\">\r\n                    <h1>Inscription Wildlens </h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        {fields.map(({ label, name, type }) => (\r\n                            <div className=\"input-data\" key={name}>\r\n                                <input\r\n                                    type={type}\r\n                                    name={name}\r\n                                    value={formData[name]}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                                <label>{label}</label>\r\n                                <span className=\"underline\"></span>\r\n                                {errors[name] && <div className=\"error\">{errors[name]}</div>}\r\n                            </div>\r\n                        ))}\r\n\r\n                        <div className=\"btn\">\r\n                            <button type=\"submit\">S'inscrire</button>\r\n                        </div>\r\n\r\n                        {successMessage && <p className=\"success\">{successMessage}</p>}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inscription;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACrCU,GAAG,EAAE,EAAE;IACPC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACrB,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMoB,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCf,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACc,IAAI,GAAGC;IAAM,CAAC,CAAC;IAC3CN,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAACM,IAAI,GAAG;IAAG,CAAC,CAAC;IACpCH,iBAAiB,CAAC,EAAE,CAAC;EACzB,CAAC;EAED,MAAMM,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpB,MAAMC,UAAU,GAAG,4BAA4B;IAC/C,MAAMC,UAAU,GAAG,eAAe;IAElC,IAAI,CAACpB,QAAQ,CAACE,GAAG,CAACmB,IAAI,CAAC,CAAC,EAAEH,SAAS,CAAChB,GAAG,GAAG,oBAAoB;IAC9D,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACkB,IAAI,CAAC,CAAC,EAAEH,SAAS,CAACf,MAAM,GAAG,uBAAuB;IACvE,IAAI,CAACH,QAAQ,CAACI,KAAK,CAACiB,IAAI,CAAC,CAAC,EAAEH,SAAS,CAACd,KAAK,GAAG,sBAAsB,CAAC,KAChE,IAAI,CAACe,UAAU,CAACG,IAAI,CAACtB,QAAQ,CAACI,KAAK,CAAC,EAAEc,SAAS,CAACd,KAAK,GAAG,iBAAiB;IAC9E,IAAI,CAACJ,QAAQ,CAACK,SAAS,CAACgB,IAAI,CAAC,CAAC,EAAEH,SAAS,CAACb,SAAS,GAAG,uBAAuB,CAAC,KACzE,IAAI,CAACe,UAAU,CAACE,IAAI,CAACtB,QAAQ,CAACK,SAAS,CAAC,EAAEa,SAAS,CAACb,SAAS,GAAG,oCAAoC;IACzG,IAAI,CAACL,QAAQ,CAACM,QAAQ,EAAEY,SAAS,CAACZ,QAAQ,GAAG,sBAAsB,CAAC,KAC/D,IAAIN,QAAQ,CAACM,QAAQ,CAACiB,MAAM,GAAG,CAAC,EAAEL,SAAS,CAACZ,QAAQ,GAAG,uBAAuB;IACnF,IAAI,CAACN,QAAQ,CAACO,eAAe,EAAEW,SAAS,CAACX,eAAe,GAAG,uBAAuB,CAAC,KAC9E,IAAIP,QAAQ,CAACM,QAAQ,KAAKN,QAAQ,CAACO,eAAe,EACnDW,SAAS,CAACX,eAAe,GAAG,yCAAyC;IAEzEE,SAAS,CAACS,SAAS,CAAC;IACpB,OAAOM,MAAM,CAACC,IAAI,CAACP,SAAS,CAAC,CAACK,MAAM,KAAK,CAAC;EAC9C,CAAC;EAED,MAAMG,YAAY,GAAIb,CAAC,IAAK;IACxBA,CAAC,CAACc,cAAc,CAAC,CAAC;IAClB,IAAIV,QAAQ,CAAC,CAAC,EAAE;MACZW,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE7B,QAAQ,CAAC;MAC7CW,iBAAiB,CAAC,uBAAuB,CAAC;MAC1CV,WAAW,CAAC;QACRC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE;MACrB,CAAC,CAAC;MACFE,SAAS,CAAC,CAAC,CAAC,CAAC;IACjB;EACJ,CAAC;EAED,MAAMqB,MAAM,GAAG,CACX;IAAEC,KAAK,EAAE,KAAK;IAAEjB,IAAI,EAAE,KAAK;IAAEkB,IAAI,EAAE;EAAO,CAAC,EAC3C;IAAED,KAAK,EAAE,QAAQ;IAAEjB,IAAI,EAAE,QAAQ;IAAEkB,IAAI,EAAE;EAAO,CAAC,EACjD;IAAED,KAAK,EAAE,OAAO;IAAEjB,IAAI,EAAE,OAAO;IAAEkB,IAAI,EAAE;EAAO,CAAC;EAAE;EACjD;IAAED,KAAK,EAAE,WAAW;IAAEjB,IAAI,EAAE,WAAW;IAAEkB,IAAI,EAAE;EAAM,CAAC,EACtD;IAAED,KAAK,EAAE,cAAc;IAAEjB,IAAI,EAAE,UAAU;IAAEkB,IAAI,EAAE;EAAW,CAAC,EAC7D;IAAED,KAAK,EAAE,2BAA2B;IAAEjB,IAAI,EAAE,iBAAiB;IAAEkB,IAAI,EAAE;EAAW,CAAC,CACpF;EAED,oBACIpC,OAAA;IAAKqC,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpBtC,OAAA;MAAKqC,SAAS,EAAC,SAAS;MAAAC,QAAA,gBAGpBtC,OAAA;QAAQqC,SAAS,EAAC,YAAY;QAACE,OAAO,EAAEA,CAAA,KAAMpC,QAAQ,CAAC,UAAU,CAAE;QAAAmC,QAAA,EAAC;MAEpE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAET3C,OAAA;QAAKqC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBtC,OAAA;UAAAsC,QAAA,EAAI;QAAqB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9B3C,OAAA;UAAM4C,QAAQ,EAAEd,YAAa;UAAAQ,QAAA,GACxBJ,MAAM,CAACW,GAAG,CAACC,IAAA;YAAA,IAAC;cAAEX,KAAK;cAAEjB,IAAI;cAAEkB;YAAK,CAAC,GAAAU,IAAA;YAAA,oBAC9B9C,OAAA;cAAKqC,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACvBtC,OAAA;gBACIoC,IAAI,EAAEA,IAAK;gBACXlB,IAAI,EAAEA,IAAK;gBACXC,KAAK,EAAEf,QAAQ,CAACc,IAAI,CAAE;gBACtB6B,QAAQ,EAAE/B,YAAa;gBACvBgC,QAAQ;cAAA;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC,eACF3C,OAAA;gBAAAsC,QAAA,EAAQH;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtB3C,OAAA;gBAAMqC,SAAS,EAAC;cAAW;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,EAClC/B,MAAM,CAACM,IAAI,CAAC,iBAAIlB,OAAA;gBAAKqC,SAAS,EAAC,OAAO;gBAAAC,QAAA,EAAE1B,MAAM,CAACM,IAAI;cAAC;gBAAAsB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA,GAV/BzB,IAAI;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWhC,CAAC;UAAA,CACT,CAAC,eAEF3C,OAAA;YAAKqC,SAAS,EAAC,KAAK;YAAAC,QAAA,eAChBtC,OAAA;cAAQoC,IAAI,EAAC,QAAQ;cAAAE,QAAA,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,EAEL7B,cAAc,iBAAId,OAAA;YAAGqC,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAExB;UAAc;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACzC,EAAA,CA1GQD,WAAW;EAAA,QACCH,WAAW;AAAA;AAAAmD,EAAA,GADvBhD,WAAW;AA4GpB,eAAeA,WAAW;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}